---
- name: Pull customer data from JIRA
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    JIRA:
      basicauth: "{{ lookup('env', 'JIRA_BASICAUTH') }}"
      workspaceID: "{{ lookup('env', 'JIRA_WORKSPACEID') }}"
    # For each product, need ID (ObjectTypeID) and OrgID (ObjectTypeAttributeID)
    ProductInfo:
      ATOM: 
        ObjectTypeID: 22
        ObjectTypeAttID: 312
      ION: 
        ObjectTypeID: 12
        ObjectTypeAttID: 90
      ARS-600: 
        ObjectTypeID: 35 
        ObjectTypeAttID: 427
      ARS-500: 
        ObjectTypeID: 8
        ObjectTypeAttID: 51
      ARS-400: 
        ObjectTypeID: 14 
        ObjectTypeAttID: 112 
      ARS-Redbox: 
        ObjectTypeID: 34
        ObjectTypeAttID: 408
      ARS-KB-R: 
        ObjectTypeID: 16
        ObjectTypeAttID: 134
      ARS-KB-H: 
        ObjectTypeID: 17
        ObjectTypeAttID: 145
      GETAC F110: 
        ObjectTypeID: 28
        ObjectTypeAttID: 480
      PAN-GCS: 
        ObjectTypeID: 29
        ObjectTypeAttID: 479
      NUC-GCS: 
        ObjectTypeID: 30
        ObjectTypeAttID: 478
      RP-1: 
        ObjectTypeID: 31
        ObjectTypeAttID: 379
      MC1-CPU-25: 
        ObjectTypeID: 32
        ObjectTypeAttID: 391
      EARTH-QUARK: 
        ObjectTypeID: 33
        ObjectTypeAttID: 477
  tasks:
  # Explicitly uses v1 of the REST API...may need updating in the future
#  - name: Get Org/Prod/Serial data for one ATOM
#    uri:
#      headers:
#        Authorization: "Basic {{ JIRA.basicauth }}"
#        Accept: 'application/json'
#        X-ExperimentalApi: 'opt-in'  #needed for certain exp APIs
#      url: 'https://api.atlassian.com/jsm/insight/workspace/{{ JIRA.workspaceID }}/v1/object/4843/attributes' #ATOM 1
#      method: GET
#    register: object_instances
#
#  - name: Debug ATOMs
#    debug:
#      var: object_instances
        
#  - name: Debug ATOMs
#    debug:
#      msg:
#        - "Organization : {{ item.1.displayValue }}"
#        - "Product      : {{ item.0.displayValue.split()[0] }}"
#        - "Serial#      : {{ item.0.displayValue.split()[2] }}"
#    loop: "{{ object_instances.json.1.objectAttributeValues | zip(object_instances.json.4.objectAttributeValues) | list }}"

#  - name: Find all object IDs for ATOMs
  - name: Find all object IDs for ATOMs
    uri:
      headers:
        Authorization: "Basic {{ JIRA.basicauth }}"
        Accept: 'application/json'
        X-ExperimentalApi: 'opt-in'  #needed for certain exp APIs
      url: 'https://api.atlassian.com/jsm/insight/workspace/{{ JIRA.workspaceID }}/v1/object/navlist/iql'
      body_format: json
#        "iql": "objectType = \"{{ item.key }}\" order by Name",
#        "objectTypeId": "{{ item.value }}",
#        "iql": "objectType = \"ATOM\" AND objectTypeId = 4841 order by Name",
      body: '{
        "iql": "objectType = \"ATOM\" AND Name like \"160369\"",
        "objectTypeId": "22",
        "page": 1,
        "resultsPerPage": 1000,
        "includeAttributes": true,
        "attributesToDisplay": {
          "attributesToDisplayIds": [ 312 ]
        },
        "objectSchemaId": "4"
      }'
      method: POST
#    loop: "{{ ObjectTypeIDs | dict2items }}"
#    loop: "{{ ProductInfo | dict2items }}"
    register: object_IDs

  - name: Debug ALL object IDs
    debug:
      msg: "{{ object_IDs.json }}"
#    loop: "{{ object_IDs }}"

#  - name: Debug ALL object IDs
#    debug:
#      msg: "{{ item.json }}"
#    loop: "{{ object_IDs.results }}"
#    loop_control:
#      label: "{{ item.json.name }}"

#  - name: Debug ATOM object IDs
#    debug:
#      msg: 
#        - "Object Name    : {{ item.json.objectEntries.name.split()[0] }}"
#        - "Object Serial# : {{ item.json.objectEntries.name.split()[2] }}"
#        - "Object ID      : {{ item.json.objectEntries.id }}"
#    #loop: "{{ object_IDs.results.json.objectEntries }}"
#    loop: "{{ object_IDs.results }}"
#    loop_control:
#      label: "{{ item.json.objectEntries.name }}"
#    register: ATOM_object_ID_list

