---
- name: Rotate passwords for user accounts
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    userlist: [ 'testuser1', 'testuser2', 'testuser3', 'testuser4' ]
  tasks:
  - name: Get latest Bitwarden content
    command: bw sync

  - name: Generate passwords
    command: 
      #cmd: bw generate -ulns --length 32
      cmd: bw generate -uln --length 32
      strip_empty_ends: yes
    with_sequence: count=4
    register: pws

  - name: Print pws
    debug:
      var: item
    loop: "{{ pws.results }}"

  - name: Get login template and substitute
    shell:
      cmd: bw get template item.login | jq '.username="{{ item.username | quote }}" | .password="{{ item.pgen | quote }}"'
      #stdin: bw get template item.login
    loop:
    - { username: "{{ userlist.0 }}", pgen: "{{ pws.results.0.stdout }}" }
    - { username: "{{ userlist.1 }}", pgen: "{{ pws.results.1.stdout }}" }
    - { username: "{{ userlist.2 }}", pgen: "{{ pws.results.2.stdout }}" }
    - { username: "{{ userlist.3 }}", pgen: "{{ pws.results.3.stdout }}" }
    register: full_jsons

  - name: Print JSONs
    debug:
      var: item
    loop: "{{ full_jsons.results }}"

#  - name: Create bw_items
#    shell:
#      cmd: bw encode | bw create item
#      stdin: '"{{ item }}"'
#    loop:
#    - "{{ bw_items.0 | string }}"
#    - "{{ bw_items.1 | string }}"
#    - "{{ bw_items.2 | string }}"
#    - "{{ bw_items.3 | string }}"

#  - name: Initiate bw item JSONs
#    set_fact: 
#      bw_items: []
#
#  - name: Create bw item JSONs
#    set_fact: 
#      bw_items: "{{ bw_items +
#                    [{ 'organizationId': 'null',
#                       'folderId': 'null',
#                       'type': 1,
#                       'name': 'item.username',
#                       'notes': '',
#                       'favorite': false,
#                       'fields': [],
#                       'login': {
#                         'uris': [],
#                         'username': 'item.username',
#                         'password': 'item.pgen',
#                         'totp': 'null' 
#                       },
#                       'secureNote': 'null',
#                       'card': 'null',
#                       'identity': 'null'
#                     }] }}"
#    loop:
#    - { username: testuser1, pgen: "{{ pws.results.0.stdout }}" }
#    - { username: testuser2, pgen: "{{ pws.results.1.stdout }}" }
#    - { username: testuser3, pgen: "{{ pws.results.2.stdout }}" }
#    - { username: testuser4, pgen: "{{ pws.results.3.stdout }}" }
#
#  - name: Print JSONs
#    debug:
#      var: item | string
#    loop: "{{ bw_items }}"
#
#  - name: Create bw_items
#    shell:
#      cmd: bw encode | bw create item
#      stdin: '"{{ item }}"'
#    loop:
#    - "{{ bw_items.0 | string }}"
#    - "{{ bw_items.1 | string }}"
#    - "{{ bw_items.2 | string }}"
#    - "{{ bw_items.3 | string }}"
#
